"""initial migration

Revision ID: b0dcc4393940
Revises:
Create Date: 2024-09-17 23:44:22.454719

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b0dcc4393940"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "organizations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("node_id", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("repos_url", sa.String(), nullable=False),
        sa.Column("events_url", sa.String(), nullable=False),
        sa.Column("hooks_url", sa.String(), nullable=False),
        sa.Column("issues_url", sa.String(), nullable=False),
        sa.Column("members_url", sa.String(), nullable=False),
        sa.Column("public_members_url", sa.String(), nullable=False),
        sa.Column("avatar_url", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("company", sa.String(), nullable=True),
        sa.Column("blog", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("twitter_username", sa.String(), nullable=True),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("has_organization_projects", sa.Boolean(), nullable=False),
        sa.Column("has_repository_projects", sa.Boolean(), nullable=False),
        sa.Column("public_repos", sa.Integer(), nullable=False),
        sa.Column("public_gists", sa.Integer(), nullable=False),
        sa.Column("followers", sa.Integer(), nullable=False),
        sa.Column("following", sa.Integer(), nullable=False),
        sa.Column("html_url", sa.String(), nullable=False),
        sa.Column("type_of", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("archived_at", sa.DateTime(), nullable=True),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("orangization_login", "organizations", ["login"], unique=False)
    op.create_index("orangization_name", "organizations", ["name"], unique=False)
    op.create_index("organization_company", "organizations", ["company"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("node_id", sa.String(), nullable=False),
        sa.Column("avatar_url", sa.String(), nullable=False),
        sa.Column("gravatar_id", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("html_url", sa.String(), nullable=False),
        sa.Column("followers_url", sa.String(), nullable=False),
        sa.Column("following_url", sa.String(), nullable=False),
        sa.Column("gists_url", sa.String(), nullable=False),
        sa.Column("starred_url", sa.String(), nullable=False),
        sa.Column("subscriptions_url", sa.String(), nullable=False),
        sa.Column("organizations_url", sa.String(), nullable=False),
        sa.Column("repos_url", sa.String(), nullable=False),
        sa.Column("events_url", sa.String(), nullable=False),
        sa.Column("received_events_url", sa.String(), nullable=False),
        sa.Column("type_of", sa.String(), nullable=False),
        sa.Column("site_admin", sa.Boolean(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("company", sa.String(), nullable=True),
        sa.Column("blog", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("hireable", sa.Boolean(), nullable=False),
        sa.Column("bio", sa.String(), nullable=True),
        sa.Column("twitter_username", sa.String(), nullable=True),
        sa.Column("public_repos", sa.Integer(), nullable=False),
        sa.Column("public_gists", sa.Integer(), nullable=False),
        sa.Column("followers", sa.Integer(), nullable=False),
        sa.Column("following", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("company_name", "users", ["company"], unique=False)
    op.create_index("user_name", "users", ["name"], unique=False)
    op.create_table(
        "repositories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("allow_auto_merge", sa.Boolean(), nullable=True),
        sa.Column("allow_forking", sa.Boolean(), nullable=True),
        sa.Column("allow_merge_commit", sa.Boolean(), nullable=True),
        sa.Column("allow_rebase_merge", sa.Boolean(), nullable=True),
        sa.Column("allow_squash_merge", sa.Boolean(), nullable=True),
        sa.Column("allow_update_branch", sa.Boolean(), nullable=True),
        sa.Column("archived", sa.Boolean(), nullable=True),
        sa.Column("archive_url", sa.String(), nullable=True),
        sa.Column("assignees_url", sa.String(), nullable=True),
        sa.Column("blobs_url", sa.String(), nullable=True),
        sa.Column("branches_url", sa.String(), nullable=True),
        sa.Column("clone_url", sa.String(), nullable=True),
        sa.Column("collaborators_url", sa.String(), nullable=True),
        sa.Column("comments_url", sa.String(), nullable=True),
        sa.Column("commits_url", sa.String(), nullable=True),
        sa.Column("compare_url", sa.String(), nullable=True),
        sa.Column("contents_url", sa.String(), nullable=True),
        sa.Column("contributors_url", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("default_branch", sa.String(), nullable=True),
        sa.Column("delete_branch_on_merge", sa.Boolean(), nullable=True),
        sa.Column("deployments_url", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("downloads_url", sa.String(), nullable=True),
        sa.Column("events_url", sa.String(), nullable=True),
        sa.Column("fork", sa.Boolean(), nullable=True),
        sa.Column("forks", sa.Integer(), nullable=True),
        sa.Column("forks_count", sa.Integer(), nullable=False),
        sa.Column("forks_url", sa.String(), nullable=True),
        sa.Column("full_name", sa.String(), nullable=True),
        sa.Column("git_commits_url", sa.String(), nullable=True),
        sa.Column("git_refs_url", sa.String(), nullable=True),
        sa.Column("git_tags_url", sa.String(), nullable=True),
        sa.Column("git_url", sa.String(), nullable=True),
        sa.Column("has_downloads", sa.Boolean(), nullable=True),
        sa.Column("has_issues", sa.Boolean(), nullable=False),
        sa.Column("has_pages", sa.Boolean(), nullable=False),
        sa.Column("has_projects", sa.Boolean(), nullable=False),
        sa.Column("has_wiki", sa.Boolean(), nullable=False),
        sa.Column("has_discussions", sa.Boolean(), nullable=False),
        sa.Column("homepage", sa.String(), nullable=True),
        sa.Column("hooks_url", sa.String(), nullable=True),
        sa.Column("html_url", sa.String(), nullable=True),
        sa.Column("is_template", sa.Boolean(), nullable=True),
        sa.Column("issue_comment_url", sa.String(), nullable=True),
        sa.Column("issue_events_url", sa.String(), nullable=True),
        sa.Column("issues_url", sa.String(), nullable=True),
        sa.Column("keys_url", sa.String(), nullable=True),
        sa.Column("labels_url", sa.String(), nullable=True),
        sa.Column("language", sa.String(), nullable=True),
        sa.Column("languages_url", sa.String(), nullable=True),
        sa.Column("merge_commit_message", sa.String(), nullable=True),
        sa.Column("merge_commit_title", sa.String(), nullable=True),
        sa.Column("merges_url", sa.String(), nullable=True),
        sa.Column("milestones_url", sa.String(), nullable=True),
        sa.Column("mirror_url", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("network_count", sa.Integer(), nullable=True),
        sa.Column("notifications_url", sa.String(), nullable=True),
        sa.Column("open_issues", sa.Integer(), nullable=True),
        sa.Column("open_issues_count", sa.Integer(), nullable=False),
        sa.Column("organization_id", sa.Integer(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=False),
        sa.Column("pulls_url", sa.String(), nullable=True),
        sa.Column("pushed_at", sa.DateTime(), nullable=False),
        sa.Column("releases_url", sa.String(), nullable=True),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("squash_merge_commit_message", sa.String(), nullable=True),
        sa.Column("squash_merge_commit_title", sa.String(), nullable=True),
        sa.Column("ssh_url", sa.String(), nullable=True),
        sa.Column("stargazers_count", sa.Integer(), nullable=True),
        sa.Column("stargazers_url", sa.String(), nullable=True),
        sa.Column("statuses_url", sa.String(), nullable=True),
        sa.Column("subscribers_url", sa.String(), nullable=True),
        sa.Column("subscribers_count", sa.Integer(), nullable=True),
        sa.Column("subscription_url", sa.String(), nullable=True),
        sa.Column("svn_url", sa.String(), nullable=True),
        sa.Column("tags_url", sa.String(), nullable=True),
        sa.Column("teams_url", sa.String(), nullable=True),
        sa.Column("topics", sa.JSON(), nullable=True),
        sa.Column("trees_url", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("web_commit_signoff_required", sa.Boolean(), nullable=True),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["repositories.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_index("repo_fullname", "repositories", ["full_name"], unique=False)
    op.create_index(
        "repo_organization_id", "repositories", ["organization_id"], unique=False
    )
    op.create_index("repo_parent_id", "repositories", ["parent_id"], unique=False)
    op.create_index("repo_size", "repositories", ["size"], unique=False)
    op.create_table(
        "content_files",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("type_of", sa.String(), nullable=False),
        sa.Column("encoding", sa.String(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("sha", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("git_url", sa.String(), nullable=False),
        sa.Column("html_url", sa.String(), nullable=False),
        sa.Column("download_url", sa.String(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["repository_id"], ["repositories.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("content_files_name", "content_files", ["name"], unique=False)
    op.create_table(
        "languages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("repository_id", sa.Integer(), nullable=False),
        sa.Column("inserted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["repository_id"], ["repositories.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("languages_name", "languages", ["name"], unique=False)
    op.create_index("languages_repo_id", "languages", ["repository_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("languages_repo_id", table_name="languages")
    op.drop_index("languages_name", table_name="languages")
    op.drop_table("languages")
    op.drop_index("content_files_name", table_name="content_files")
    op.drop_table("content_files")
    op.drop_index("repo_size", table_name="repositories")
    op.drop_index("repo_parent_id", table_name="repositories")
    op.drop_index("repo_organization_id", table_name="repositories")
    op.drop_index("repo_fullname", table_name="repositories")
    op.drop_table("repositories")
    op.drop_index("user_name", table_name="users")
    op.drop_index("company_name", table_name="users")
    op.drop_table("users")
    op.drop_index("organization_company", table_name="organizations")
    op.drop_index("orangization_name", table_name="organizations")
    op.drop_index("orangization_login", table_name="organizations")
    op.drop_table("organizations")
    # ### end Alembic commands ###
